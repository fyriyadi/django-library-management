# Generated by Django 3.2.3 on 2021-05-15 09:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('cover', models.ImageField(blank=True, null=True, upload_to='')),
                ('description', models.CharField(max_length=200, null=True)),
                ('release_date', models.DateField(blank=True, default='2021-05-15', null=True)),
                ('book_type', models.CharField(choices=[('Book', 'Book'), ('Newspapper', 'Newspapper'), ('Magazine', 'Magazine')], default='Book', max_length=20, null=True)),
                ('language', models.CharField(choices=[('Indonesia', 'Indonesia'), ('English', 'English')], default='Indonesia', max_length=20, null=True)),
                ('no_of_pages', models.IntegerField(default=0, null=True)),
                ('identifier', models.CharField(max_length=100, null=True)),
                ('total', models.IntegerField(default=0, null=True)),
                ('available', models.IntegerField(default=0, null=True)),
                ('date_added', models.DateField(auto_now_add=True, null=True)),
                ('author', models.ManyToManyField(blank=True, to='library_app.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('phone', models.CharField(max_length=20, null=True)),
                ('email', models.CharField(max_length=100, null=True)),
                ('adress', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Borrow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.DateField(auto_now_add=True, null=True)),
                ('start_date', models.DateField(blank=True, default='2021-05-15', null=True)),
                ('finish_date', models.DateField(blank=True, default='2021-05-15', null=True)),
                ('approval_status', models.BooleanField(default=False, null=True)),
                ('return_status', models.BooleanField(default=False, null=True)),
                ('notes', models.CharField(default='', max_length=200, null=True)),
                ('book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='library_app.book')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='publisher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='library_app.publisher'),
        ),
        migrations.AddField(
            model_name='book',
            name='subject',
            field=models.ManyToManyField(blank=True, to='library_app.Subject'),
        ),
    ]
